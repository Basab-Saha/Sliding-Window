Qlink: https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/

class Solution {
public:
    int minOperations(vector<int>& nums, int x) {
        long long tail=0;long long ans=-1;long long sum=0;

        long long total=accumulate(nums.begin(),nums.end(),0);

    int reqSum=total-x  ;//mane amader max length subarray whose sum is req sum find krte hbe

        if(reqSum>0){
             for(long long head=0;head<nums.size();head++){
            sum=sum+nums[head];

            

            while(sum>(total-x)){
                //tail update
                sum=sum-nums[tail];
                //shrink
                tail++;
            }

            if(sum==(total-x)){
                ans=max(ans,head-tail+1);
            }

           
        }

       
        } 

        if(reqSum>0){
            if(ans==-1){
                return -1;
            }
            else{
                return nums.size()-ans;
            }
        }
        else if(reqSum==0) return nums.size();
        return ans;
        
    }
};
